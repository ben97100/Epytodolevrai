import requests

BASE_URL = "http://localhost:8080"
RESOURCE = "notes"
ENTRY_ID = "123"
INITIAL_DATA = {
    "id": ENTRY_ID,
    "title": "Test Note",
    "content": "This is a test."
}
UPDATED_DATA = {
    "title": "Updated Note",
    "content": "This is updated."
}


def test_server_health():
    try:
        response = requests.get(f"{BASE_URL}/{RESOURCE}")
        assert response.status_code == 200,
            f"Expected 200, got {response.status_code}"
        print("\n✅ Server is responding.")
    except requests.exceptions.RequestException as e:
        raise AssertionError("❌ Server not running or unreachable.") from e


def test_post_entry():
    print("\n➡️ Testing POST /notes")
    response = requests.post(f"{BASE_URL}/{RESOURCE}", json=INITIAL_DATA)
    print(f"Response: {response.status_code} - {response.text}")
    assert response.status_code in [200, 201],
        f"Expected 201 or 200, got {response.status_code}"
    assert f"Added {RESOURCE}" in response.text


def test_get_entry():
    print("\n➡️ Testing GET /notes/123")
    response = requests.get(f"{BASE_URL}/{RESOURCE}/{ENTRY_ID}")
    print(f"Response: {response.status_code} - {response.text}")
    assert response.status_code == 200, f"Expected 200, got {response.status_code}"
    data = response.json()
    assert data["title"] == INITIAL_DATA["title"]
    assert data["content"] == INITIAL_DATA["content"]


def test_put_entry():
    print("\n➡️ Testing PUT /notes/123")
    response = requests.put(f"{BASE_URL}/{RESOURCE}/{ENTRY_ID}", json=UPDATED_DATA)
    print(f"Response: {response.status_code} - {response.text}")
    assert response.status_code == 200, f"Expected 200, got {response.status_code}"
    assert f"Updated {RESOURCE} {ENTRY_ID}" in response.text


def test_get_updated_entry():
    print("\n➡️ Testing GET (updated) /notes/123")
    response = requests.get(f"{BASE_URL}/{RESOURCE}/{ENTRY_ID}")
    print(f"Response: {response.status_code} - {response.text}")
    assert response.status_code == 200, f"Expected 200, got {response.status_code}"
    data = response.json()
    assert data["title"] == UPDATED_DATA["title"]
    assert data["content"] == UPDATED_DATA["content"]


def test_delete_entry():
    print("\n➡️ Testing DELETE /notes/123")
    response = requests.delete(f"{BASE_URL}/{RESOURCE}/{ENTRY_ID}")
    print(f"Response: {response.status_code} - {response.text}")
    assert response.status_code == 200, f"Expected 200, got {response.status_code}"
    assert f"Deleted {RESOURCE} {ENTRY_ID}" in response.text


def test_get_deleted_entry():
    print("\n➡️ Testing GET after DELETE /notes/123")
    response = requests.get(f"{BASE_URL}/{RESOURCE}/{ENTRY_ID}")
    print(f"Response: {response.status_code} - {response.text}")
    assert response.status_code == 404, f"Expected 404, got {response.status_code}"
